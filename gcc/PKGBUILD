PKGNAME=gcc
PKGVER=14.2.0
tarball="https://ftp.gnu.org/gnu/gcc/gcc-${PKGVER}/gcc-${PKGVER}.tar.xz"

patch_package() {
	cd "${PKGNAME}-${PKGVER}"
	# Grab the patch from the upstream toolchains repo
	wget https://raw.githubusercontent.com/heatd/toolchains/master/${PKGNAME}-${PKGVER}.patch
	patch -p1 < "${PKGNAME}-${PKGVER}.patch"
}

build() {
	mkdir -p gcc-build
	cd gcc-build

	# Setting mandatory arguments (--sysroot and for clang, --target) inside CC, CXX, LD
	# is bad practice but works for GCC, so don't touch this
	# Building a canadian cross is scary.
	export CC="$CC $CFLAGS"
	export CXX="$CXX $CXXFLAGS"
	export CD="$LD $LDFLAGS"
	export CC_FOR_TARGET="$CC"
	export CXX_FOR_TARGET="$CXX"
	export LD_FOR_TARGET="$LD"

	unset -v CFLAGS
	unset -v CXXFLAGS
	unset -v LDFLAGS
	unset -v CPPFLAGS
	../${PKGNAME}-${PKGVER}/configure $ONYX_CONFIGURE_OPTIONS --prefix=/usr --with-sysroot= \
	--with-build-sysroot=$SYSROOT --enable-languages=c,c++ --disable-nls --enable-threads=posix \
	--enable-libstdcxx-threads --enable-shared --enable-symvers=gnu --enable-default-pie --enable-lto \
	--enable-default-ssp --enable-checking=release --with-bugurl=https://github.com/heatd/toolchains/issues \
	--enable-initfini-array
	$MAKE all-gcc all-target-libgcc all-target-libstdc++-v3 all-target-libsanitizer
}

package() {
	cd gcc-build
	DESTDIR=$PKGDIR $MAKE install-gcc install-target-libgcc install-target-libstdc++-v3 install-target-libsanitizer
}
